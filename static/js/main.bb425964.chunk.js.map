{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/PasteBin.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","qs","require","pastebin","ver","code","process","config","method","url","proxyurl","headers","console","log","axios","then","response","catch","error","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","Container","Row","xs","xl","Col","type","onClick","id","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb425964.chunk.js","sourcesContent":["import React from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/3024-night.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\n\n\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\n\n\nexport default function Editor(props) {\n    const {\n        language,\n        displayName,\n        value,\n        onChange\n    } = props\n    // const [open, setOpen] = useState(true)\n\n    function handleChange(editor, data, value) {\n        onChange(value)\n    }\n\n    return ( <\n        div className = { `editor-container` } >\n        <\n        div className = \"editor-title\" > { displayName } <\n        /div> <\n        ControlledEditor onBeforeChange = { handleChange }\n        value = { value }\n        className = \"code-mirror-wrapper\"\n        options = {\n            {\n                lineWrapping: true,\n                lint: true,\n                mode: language,\n                theme: '3024-night',\n                lineNumbers: true\n            }\n        }\n        /> < /\n        div >\n    )\n}","import { useEffect, useState } from 'react'\nconst PREFIX = 'dyte-code-submission'\n\nexport default function useLocalStorage(key, initialValue) {\n    const prefixedKey = PREFIX + key\n    const [value, setValue] = useState(() => {\n        const jsonValue = localStorage.getItem(prefixedKey)\n        if (jsonValue != null) return JSON.parse(jsonValue)\n\n        if (typeof initialValue === 'function') {\n            return initialValue()\n        } else {\n            return initialValue\n        }\n    })\n\n    useEffect(() => {\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\n    }, [prefixedKey, value])\n\n    return [value, setValue]\n}","import axios from 'axios';\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst url = \"https://pastebin.com/api/api_post.php\";\nconst qs = require('qs');\n\nexport default function pastebin(data, ver) {\n    const code = qs.stringify({\n        'api_dev_key': process.env.REACT_APP_PASTEBIN_API,\n        'api_paste_code': data,\n        'api_option': 'paste',\n        'api_paste_format': ver\n    });\n    const config = {\n        method: 'post',\n        url: proxyurl + url,\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        data: code\n    };\n    console.log(config)\n    console.log(JSON.stringify(code))\n    axios(config)\n        .then(function(response) {\n            console.log(JSON.stringify(response.data));\n            // const element = JSON.stringify(response.data);\n            // ReactDOM.render(element, document.getElementById('root'));\n        })\n        .catch(function(error) {\n            console.log(error);\n        });\n}","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\n\nimport pastebin from './PasteBin';\nimport { Container, Row, Col } from 'reactstrap';\n\n\n\nfunction App() {\n    const [html, setHtml] = useLocalStorage('html', '<h1>I am a headline made with HTML</h1> <p > And I am a simple text paragraph.The color of this text is styled with CSS.< /p>')\n    const [css, setCss] = useLocalStorage('css', 'body { \tfont-family: sans-serif; \ttext-align: center; \tpadding: 3rem; \tfont-size: 1.125rem; \tline-height: 1.5; \ttransition: all 725ms ease-in-out; }  h1 { \tfont-size: 2rem; \tfont-weight: bolder; \tmargin-bottom: 1rem; }  p { \tmargin-bottom: 1rem; \tcolor: tomato; }  button { \tcursor: pointer; \tappearance: none; \tborder-radius: 4px; \tfont-size: 1.25rem; \tpadding: 0.75rem 1rem; \tborder: 1px solid navy; \tbackground-color: dodgerblue; \tcolor: white; }')\n    const [js, setJs] = useLocalStorage('js', 'document.body.style.backgroundColor = \"orange\";')\n\n    const [srcDoc, setSrcDoc] = useState('')\n\n    // const url = client.createPaste({\n    //     code: \"const something = 'Hello World!'\",\n    //     expireDate: \"N\",\n    //     format: \"javascript\",\n    //     name: \"something.js\",\n    //     publicity: 0,\n    // });\n\n    // console.log(url);\n\n    // const PasteClient = require(\"pastebin-api\").default;\n\n\n\n    useEffect(() => {\n            const timeout = setTimeout(() => {\n                setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n            }, 300)\n\n            return () => clearTimeout(timeout)\n        }, [html, css, js])\n        // handlePaste => {\n        //     pastebin(html);\n        //     pastebin(css);\n        //     pastebin(js);\n        // }\n\n    return ( <\n        >\n        <\n        div className = \"pane top-pane\" > < Container > <\n        Row className = \"button\"\n        xs = \"3\"\n        xl = \"3\" > < Col > <\n        button type = \"button\"\n        className = \"button\"\n        onClick = {\n            () => pastebin(html, 'html5')\n        } > Save HTML\n\n        <\n        /\n        button > < /Col><Col> <\n        button type = \"button\"\n        className = \"button\"\n        onClick = {\n            () => pastebin(css, 'css')\n        } > Save CSS\n\n        <\n        /\n        button > < /Col ><Col> <\n        button type = \"button\"\n        className = \"button\"\n        onClick = {\n            () => pastebin(js, 'javascript')\n        } > Save JS\n\n        <\n        /\n        button > < /Col ><div className=\"editor-container-1\" id=\"root\">DYTE</div > < /Row > < /Container > <\n        Editor language = \"xml\"\n        displayName = \"INDEX.HTML\"\n        value = { html }\n        onChange = { setHtml }\n        /> <\n        Editor language = \"css\"\n        displayName = \"INDEX.CSS\"\n        value = { css }\n        onChange = { setCss }\n        /> <\n        Editor language = \"javascript\"\n        displayName = \"INDEX.JS\"\n        value = { js }\n        onChange = { setJs }\n        /> < /\n        div > <\n        div className = \"pane\" >\n        <\n        iframe srcDoc = { srcDoc }\n        title = \"output\"\n        sandbox = \"allow-scripts\"\n        frameBorder = \"0\"\n        width = \"100%\"\n        height = \"100%\" /\n        >\n        <\n        /div> < / >\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}